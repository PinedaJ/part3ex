{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Persons","person","removePerson","name","number","onClick","Filter","searchTerm","handleFilteredSearch","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Notification","message","isSuccessful","style","color","fontSize","padding","backgroundColor","border","borderRadius","marginBottom","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchTerm","setMessage","setIsSuccessful","useEffect","personService","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","map","window","confirm","pers","find","p","changedPerson","returnedPerson","setTimeout","catch","error","console","log","concat","personToRemove","removePersonOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04557a6e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({ person, removePerson }) => {\n  return (\n    <div>\n      {person.name} {person.number}\n      <button onClick={removePerson}>delete</button>\n    </div>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({ searchTerm, handleFilteredSearch }) => {\n  return (\n    <div>\n      filter shown with <input value={searchTerm} onChange={handleFilteredSearch} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return (\n    <div>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message, isSuccessful }) => {\n    const notificationSucessStyle = {\n        color: 'green',\n        fontSize: 16,\n        padding: 8,\n        backgroundColor: 'lightgrey',\n        border: '2px solid green',\n        borderRadius: 5,\n        marginBottom: 5\n    }\n\n    const notificationErrorStyle = {\n        color: 'red',\n        fontSize: 16,\n        padding: 8,\n        backgroundColor: 'lightgrey',\n        border: '2px solid red',\n        borderRadius: 5,\n        marginBottom: 5\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    return (isSuccessful)\n        ? <div style={notificationSucessStyle}>{message}</div> \n        : <div style={notificationErrorStyle}>{message}</div>\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchTerm, setSearchTerm ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ isSuccessful, setIsSuccessful ] = useState(false)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n    })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personNames = persons.map(person => person.name.toLowerCase()) // case insensitive\n    if (personNames.includes(newName.toLowerCase())) { // if name exists in phonebook already\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const pers = persons.find(p => p.name.toLowerCase() === newName.toLowerCase())\n        const changedPerson = { ...pers, number: newNumber}\n        personService\n          .update(pers.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== pers.id ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setMessage(`Updated ${returnedPerson.name}'s number`)\n            setIsSuccessful(true)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setMessage(`Information of ${changedPerson.name} has already been removed from server`)\n            setIsSuccessful(false)\n            setPersons(persons.filter(person => person.id !== pers.id))\n            console.log('failed to update, person has been deleted')\n          })\n      }\n      return\n    } // else create new person object for phonebook\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`Added ${returnedPerson.name}`)\n        setIsSuccessful(true)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilteredSearch = (event) => {\n    setSearchTerm(event.target.value)\n  }\n\n  const personsToShow = persons.filter(person => \n    person.name.toLowerCase().includes(searchTerm.toLowerCase()))\n\n  const removePersonOf = (id) => {\n    const personToRemove = personsToShow.find(person => person.id === id)\n    if (window.confirm(`Delete ${personToRemove.name}?`)) {\n      personService.remove(id)\n      setPersons(persons.filter(person => person.id !== id))\n      setMessage(`Deleted ${personToRemove.name}`)\n      setIsSuccessful(true)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} isSuccessful={isSuccessful} />\n      <Filter searchTerm={searchTerm} handleFilteredSearch={handleFilteredSearch} />\n  \n      <h3>add a new</h3>\n\n      <PersonForm\n        newName={newName} newNumber={newNumber} addPerson={addPerson}\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n\n      {personsToShow.map(person => \n        <Persons\n          key={person.name}\n          person={person} \n          removePerson={() => removePersonOf(person.id)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, \ndocument.getElementById('root'))"],"sourceRoot":""}